# 在 Python 中，括號有不同的類型，且用於不同的情境。以下是詳細介紹：


# 1. 小括號 ()
# 函數呼叫：小括號常用於函數呼叫，並將參數放在括號內。

print("Hello, World!")  # 呼叫 print 函數並傳入一個字串參數
# 元組（Tuple）：小括號也可以用來定義元組，元組是不可變的序列。

my_tuple = (1, 2, 3)  # 創建一個包含三個元素的元組
# 分組運算：小括號可以用來分組數學運算，以改變預設的運算優先級。

result = (2 + 3) * 5  # 因小括號，先執行 2 + 3，結果為 25
# 生成器表達式：小括號也可以用來生成生成器表達式。

generator = (x * 2 for x in range(5))  # 創建一個生成器物件


# 2. 中括號 []
# 列表（List）：中括號用於定義列表，列表是一個可變的序列。

my_list = [1, 2, 3, 4]  # 創建一個列表
# 索引操作：中括號可以用來訪問列表、字串或其他可迭代對象的特定元素。

my_list[0]  # 訪問列表中的第一個元素，結果為 1
# 切片操作：中括號也可用來對序列進行切片操作。

my_list[1:3]  # 切片，返回索引1到2的元素，結果為 [2, 3]
# 列表解析式：中括號可以用於列表解析式，快速創建列表。

squares = [x ** 2 for x in range(5)]  # 創建平方數列表，結果為 [0, 1, 4, 9, 16]


# 3. 大括號 {}
# 字典（Dictionary）：大括號常用於定義字典，字典是一種鍵值對集合。

my_dict = {"name": "Alice", "age": 25}  # 創建一個字典
# 集合（Set）：大括號也可用於定義集合，集合是一個不重複的無序元素集合。

my_set = {1, 2, 3, 4}  # 創建一個集合
# 字典解析式：與列表解析式類似，字典解析式可以快速創建字典。

squared_dict = {x: x ** 2 for x in range(5)}  # 結果為 {0: 0, 1: 1, 2: 4, 3: 9, 4: 16}
# 4. 其他常見應用
# 函數參數中的小括號：在定義函數時，也會用小括號來指定參數。

def greet(name):
    return f"Hello, {name}!"
# 集合與字典的區別：雖然大括號可用於定義集合與字典，但當大括號內不包含鍵值對時，Python 預設它是集合。

empty_set = {}  # 這是字典
empty_set = set()  # 這是空集合


